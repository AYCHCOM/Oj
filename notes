;; -*- mode: outline; outline-regexp: " *[-\+]"; indent-tabs-mode: nil -*-

^c^d hide subtree
^c^s show subtree


- next
 - make file io input use fileno to get file and then use C to load
  - set up benchmark for this
 - make sure stack is not exceeded
 - dump from C structs


- stream
 - use with Oj::Doc
 - use with standard
 - add callback SAX like option
  - callback parser
   - object_start
   - object_end
   - array_start
   - array_end
   - value
   - key

   - default callbacks use straight C and create Hash or Object according to mode
    - callback object
    - check respond_to? for each method at start
    - methods to indicate that defaults should be used instead of ignored
     - use_default_hash_callback?
     - use_default_array_callback?
     - use_default_key_callback?
     - use_default_value_callback?
    - or maybe
     - hash_callback? returns nil, :default, :my_hash_callback
      - default is to check hash_start and hash_end and no nothing if they do not exist
      - 

  - dump
   - support stream as arg
   - always dump to stream/file if possible (check performance)

- dump
 - object and other types of object dumping

- fast
 - make sure stack is not exceeded
 - dump native
 
 - example
  - contacts
   - pull apart input file with multiple contacts and write individual files
   - phone book get only name and phone

